!
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!  SLEPc - Scalable Library for Eigenvalue Problem Computations
!  Copyright (c) 2002-2020, Universitat Politecnica de Valencia, Spain
!
!  This file is part of SLEPc.
!  SLEPc is distributed under a 2-clause BSD license (see LICENSE).
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!
      interface RGEllipseGetParameters
        subroutine RGEllipseGetParameters000(a,b,c,d,z)
          use slepcrgdef
          RG a
          PetscScalar b
          PetscReal c
          PetscReal d
          PetscErrorCode z
        end subroutine
        subroutine RGEllipseGetParameters100(a,b,c,d,z)
          use slepcrgdef
          RG a
          PetscScalar b(*)
          PetscReal c
          PetscReal d
          PetscErrorCode z
        end subroutine
        subroutine RGEllipseGetParameters010(a,b,c,d,z)
          use slepcrgdef
          RG a
          PetscScalar b
          PetscReal c(*)
          PetscReal d
          PetscErrorCode z
        end subroutine
        subroutine RGEllipseGetParameters110(a,b,c,d,z)
          use slepcrgdef
          RG a
          PetscScalar b(*)
          PetscReal c(*)
          PetscReal d
          PetscErrorCode z
        end subroutine
        subroutine RGEllipseGetParameters001(a,b,c,d,z)
          use slepcrgdef
          RG a
          PetscScalar b
          PetscReal c
          PetscReal d(*)
          PetscErrorCode z
        end subroutine
        subroutine RGEllipseGetParameters101(a,b,c,d,z)
          use slepcrgdef
          RG a
          PetscScalar b(*)
          PetscReal c
          PetscReal d(*)
          PetscErrorCode z
        end subroutine
        subroutine RGEllipseGetParameters011(a,b,c,d,z)
          use slepcrgdef
          RG a
          PetscScalar b
          PetscReal c(*)
          PetscReal d(*)
          PetscErrorCode z
        end subroutine
      end interface RGEllipseGetParameters

      interface RGIntervalGetEndpoints
        subroutine RGIntervalGetEndpoints0000(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b
          PetscReal c
          PetscReal d
          PetscReal e
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints1000(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b(*)
          PetscReal c
          PetscReal d
          PetscReal e
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints0100(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b
          PetscReal c(*)
          PetscReal d
          PetscReal e
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints1100(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b(*)
          PetscReal c(*)
          PetscReal d
          PetscReal e
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints0010(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b
          PetscReal c
          PetscReal d(*)
          PetscReal e
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints1010(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b(*)
          PetscReal c
          PetscReal d(*)
          PetscReal e
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints0110(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b
          PetscReal c(*)
          PetscReal d(*)
          PetscReal e
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints1110(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b(*)
          PetscReal c(*)
          PetscReal d(*)
          PetscReal e
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints0001(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b
          PetscReal c
          PetscReal d
          PetscReal e(*)
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints1001(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b(*)
          PetscReal c
          PetscReal d
          PetscReal e(*)
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints0101(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b
          PetscReal c(*)
          PetscReal d
          PetscReal e(*)
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints1101(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b(*)
          PetscReal c(*)
          PetscReal d
          PetscReal e(*)
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints0011(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b
          PetscReal c
          PetscReal d(*)
          PetscReal e(*)
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints1011(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b(*)
          PetscReal c
          PetscReal d(*)
          PetscReal e(*)
          PetscErrorCode z
        end subroutine
        subroutine RGIntervalGetEndpoints0111(a,b,c,d,e,z)
          use slepcrgdef
          RG a
          PetscReal b
          PetscReal c(*)
          PetscReal d(*)
          PetscReal e(*)
          PetscErrorCode z
        end subroutine
      end interface RGIntervalGetEndpoints

      interface RGPolygonGetVertices
        subroutine RGPolygonGetVertices0(a,b,c,d,z)
          use slepcrgdef
          RG a
          PetscInt b
          PetscScalar c(*)
          PetscScalar d(*)
          PetscErrorCode z
        end subroutine
        subroutine RGPolygonGetVertices1(a,b,c,d,z)
          use slepcrgdef
          RG a
          PetscInt b(*)
          PetscScalar c(*)
          PetscScalar d(*)
          PetscErrorCode z
        end subroutine
      end interface RGPolygonGetVertices

