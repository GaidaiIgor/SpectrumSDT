      subroutine DSSetIdentity(a,b,z)
      use slepcdsdef
       DS a ! DS
       DSMatType b ! DSMatType
       integer z
       end subroutine
      subroutine DSGetLeadingDimension(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DSSetState(a,b,z)
      use slepcdsdef
       DS a ! DS
       DSStateType b ! DSStateType
       integer z
       end subroutine
      subroutine DSGetState(a,b,z)
      use slepcdsdef
       DS a ! DS
       DSStateType b ! DSStateType
       integer z
       end subroutine
      subroutine DSSetDimensions(a,b,c,d,e,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       integer z
       end subroutine
      subroutine DSGetDimensions(a,b,c,d,e,f,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       integer z
       end subroutine
      subroutine DSTruncate(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DSMatGetSize(a,b,c,d,z)
      use slepcdsdef
       DS a ! DS
       DSMatType b ! DSMatType
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DSMatIsHermitian(a,b,c,z)
      use slepcdsdef
       DS a ! DS
       DSMatType b ! DSMatType
       PetscBool c ! PetscBool
       integer z
       end subroutine
      subroutine DSGetMat(a,b,c,z)
      use slepcdsdef
       DS a ! DS
       DSMatType b ! DSMatType
       Mat c ! Mat
       integer z
       end subroutine
      subroutine DSRestoreMat(a,b,c,z)
      use slepcdsdef
       DS a ! DS
       DSMatType b ! DSMatType
       Mat c ! Mat
       integer z
       end subroutine
      subroutine DSSolve(a,b,c,z)
      use slepcdsdef
       DS a ! DS
       PetscScalar b (*) ! PetscScalar
       PetscScalar c (*) ! PetscScalar
       integer z
       end subroutine
      subroutine DSSynchronize(a,b,c,z)
      use slepcdsdef
       DS a ! DS
       PetscScalar b (*) ! PetscScalar
       PetscScalar c (*) ! PetscScalar
       integer z
       end subroutine
      subroutine DSUpdateExtraRow(a,z)
      use slepcdsdef
       DS a ! DS
       integer z
       end subroutine
      subroutine DSCond(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine DSTranslateRKS(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine DSCopyMat(a,b,c,d,e,f,g,h,i,j,z)
      use slepcdsdef
       DS a ! DS
       DSMatType b ! DSMatType
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       Mat e ! Mat
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       PetscInt h ! PetscInt
       PetscInt i ! PetscInt
       PetscBool j ! PetscBool
       integer z
       end subroutine
      subroutine DSCreate(a,b,z)
      use slepcdsdef
       integer a ! MPI_Comm
       DS b ! DS
       integer z
       end subroutine
      subroutine DSDuplicate(a,b,z)
      use slepcdsdef
       DS a ! DS
       DS b ! DS
       integer z
       end subroutine
      subroutine DSSetMethod(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DSGetMethod(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DSSetParallel(a,b,z)
      use slepcdsdef
       DS a ! DS
       DSParallelType b ! DSParallelType
       integer z
       end subroutine
      subroutine DSGetParallel(a,b,z)
      use slepcdsdef
       DS a ! DS
       DSParallelType b ! DSParallelType
       integer z
       end subroutine
      subroutine DSSetCompact(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DSGetCompact(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DSSetExtraRow(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DSGetExtraRow(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DSSetRefined(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DSGetRefined(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DSSetBlockSize(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DSGetBlockSize(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DSSetFromOptions(a,z)
      use slepcdsdef
       DS a ! DS
       integer z
       end subroutine
      subroutine DSAllocate(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DSReset(a,z)
      use slepcdsdef
       DS a ! DS
       integer z
       end subroutine
      subroutine DSDestroy(a,z)
      use slepcdsdef
       DS a ! DS
       integer z
       end subroutine
      subroutine DSNEPSetFN(a,b,c,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       FN c (*) ! FN
       integer z
       end subroutine
      subroutine DSNEPGetFN(a,b,c,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       FN c ! FN
       integer z
       end subroutine
      subroutine DSNEPGetNumFN(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DSPEPSetDegree(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DSPEPGetDegree(a,b,z)
      use slepcdsdef
       DS a ! DS
       PetscInt b ! PetscInt
       integer z
       end subroutine
