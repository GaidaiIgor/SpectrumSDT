      subroutine NEPInterpolSetInterpolation(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine NEPInterpolGetInterpolation(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine NEPInterpolSetPEP(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PEP b ! PEP
       integer z
       end subroutine
      subroutine NEPInterpolGetPEP(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PEP b ! PEP
       integer z
       end subroutine
      subroutine NEPNArnoldiSetLagPreconditioner(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine NEPNArnoldiGetLagPreconditioner(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine NEPNArnoldiSetKSP(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       KSP b ! KSP
       integer z
       end subroutine
      subroutine NEPNArnoldiGetKSP(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       KSP b ! KSP
       integer z
       end subroutine
      subroutine NEPNLEIGSSetRestart(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine NEPNLEIGSGetRestart(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine NEPNLEIGSSetLocking(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine NEPNLEIGSGetLocking(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine NEPNLEIGSSetInterpolation(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine NEPNLEIGSGetInterpolation(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine NEPNLEIGSSetRKShifts(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       PetscScalar c (*) ! PetscScalar
       integer z
       end subroutine
      subroutine NEPNLEIGSSetFullBasis(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine NEPNLEIGSGetFullBasis(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine NEPNLEIGSSetEPS(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       EPS b ! EPS
       integer z
       end subroutine
      subroutine NEPNLEIGSGetEPS(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       EPS b ! EPS
       integer z
       end subroutine
      subroutine NEPSolve(a,z)
      use slepcnepdef
       NEP a ! NEP
       integer z
       end subroutine
      subroutine NEPProjectOperator(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine NEPApplyFunction(a,b,c,d,e,f,g,z)
      use slepcnepdef
       NEP a ! NEP
       PetscScalar b ! PetscScalar
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       Mat f ! Mat
       Mat g ! Mat
       integer z
       end subroutine
      subroutine NEPApplyAdjoint(a,b,c,d,e,f,g,z)
      use slepcnepdef
       NEP a ! NEP
       PetscScalar b ! PetscScalar
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       Mat f ! Mat
       Mat g ! Mat
       integer z
       end subroutine
      subroutine NEPApplyJacobian(a,b,c,d,e,f,z)
      use slepcnepdef
       NEP a ! NEP
       PetscScalar b ! PetscScalar
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       Mat f ! Mat
       integer z
       end subroutine
      subroutine NEPGetIterationNumber(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine NEPGetConverged(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine NEPGetConvergedReason(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       NEPConvergedReason b ! NEPConvergedReason
       integer z
       end subroutine
      subroutine NEPGetLeftEigenvector(a,b,c,d,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine NEPGetErrorEstimate(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine NEPComputeError(a,b,c,d,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       NEPErrorType c ! NEPErrorType
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine NEPComputeFunction(a,b,c,d,z)
      use slepcnepdef
       NEP a ! NEP
       PetscScalar b ! PetscScalar
       Mat c ! Mat
       Mat d ! Mat
       integer z
       end subroutine
      subroutine NEPComputeJacobian(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscScalar b ! PetscScalar
       Mat c ! Mat
       integer z
       end subroutine
      subroutine NEPCISSSetSizes(a,b,c,d,e,f,g,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscBool g ! PetscBool
       integer z
       end subroutine
      subroutine NEPCISSGetSizes(a,b,c,d,e,f,g,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscBool g ! PetscBool
       integer z
       end subroutine
      subroutine NEPCISSSetThreshold(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine NEPCISSGetThreshold(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine NEPCISSSetRefinement(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine NEPCISSGetRefinement(a,b,c,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine NEPRIISetMaximumIterations(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine NEPRIIGetMaximumIterations(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine NEPRIISetLagPreconditioner(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine NEPRIIGetLagPreconditioner(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine NEPRIISetConstCorrectionTol(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine NEPRIIGetConstCorrectionTol(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine NEPRIISetHermitian(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine NEPRIIGetHermitian(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine NEPRIISetDeflationThreshold(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine NEPRIIGetDeflationThreshold(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine NEPRIISetKSP(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       KSP b ! KSP
       integer z
       end subroutine
      subroutine NEPRIIGetKSP(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       KSP b ! KSP
       integer z
       end subroutine
      subroutine NEPSLPSetDeflationThreshold(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine NEPSLPGetDeflationThreshold(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine NEPSLPSetEPS(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       EPS b ! EPS
       integer z
       end subroutine
      subroutine NEPSLPGetEPS(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       EPS b ! EPS
       integer z
       end subroutine
      subroutine NEPSLPSetEPSLeft(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       EPS b ! EPS
       integer z
       end subroutine
      subroutine NEPSLPGetEPSLeft(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       EPS b ! EPS
       integer z
       end subroutine
      subroutine NEPSLPSetKSP(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       KSP b ! KSP
       integer z
       end subroutine
      subroutine NEPSLPGetKSP(a,b,z)
      use slepcnepdef
       NEP a ! NEP
       KSP b ! KSP
       integer z
       end subroutine
