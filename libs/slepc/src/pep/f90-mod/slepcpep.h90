!
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!  SLEPc - Scalable Library for Eigenvalue Problem Computations
!  Copyright (c) 2002-2020, Universitat Politecnica de Valencia, Spain
!
!  This file is part of SLEPc.
!  SLEPc is distributed under a 2-clause BSD license (see LICENSE).
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!
      interface PEPGetDimensions
        subroutine PEPGetDimensions000(a,b,c,d,z)
        use slepcpepdef
          PEP a
          PetscInt b
          PetscInt c
          PetscInt d
          PetscErrorCode z
        end subroutine
        subroutine PEPGetDimensions100(a,b,c,d,z)
        use slepcpepdef
          PEP a
          PetscInt b(*)
          PetscInt c
          PetscInt d
          PetscErrorCode z
        end subroutine
        subroutine PEPGetDimensions010(a,b,c,d,z)
        use slepcpepdef
          PEP a
          PetscInt b
          PetscInt c(*)
          PetscInt d
          PetscErrorCode z
        end subroutine
        subroutine PEPGetDimensions001(a,b,c,d,z)
        use slepcpepdef
          PEP a
          PetscInt b
          PetscInt c
          PetscInt d(*)
          PetscErrorCode z
        end subroutine
        subroutine PEPGetDimensions110(a,b,c,d,z)
        use slepcpepdef
          PEP a
          PetscInt b(*)
          PetscInt c(*)
          PetscInt d
          PetscErrorCode z
        end subroutine
        subroutine PEPGetDimensions011(a,b,c,d,z)
        use slepcpepdef
          PEP a
          PetscInt b
          PetscInt c(*)
          PetscInt d(*)
          PetscErrorCode z
        end subroutine
        subroutine PEPGetDimensions101(a,b,c,d,z)
        use slepcpepdef
          PEP a
          PetscInt b(*)
          PetscInt c
          PetscInt d(*)
          PetscErrorCode z
        end subroutine
        end interface PEPGetDimensions

      interface PEPGetEigenpair
        subroutine PEPGetEigenpair00(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PetscInt b
          PetscScalar c
          PetscScalar d
          Vec e
          Vec f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetEigenpair10(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PetscInt b
          PetscScalar c(*)
          PetscScalar d
          Vec e
          Vec f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetEigenpair01(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PetscInt b
          PetscScalar c
          PetscScalar d(*)
          Vec e
          Vec f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetEigenpair11(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PetscInt b
          PetscScalar c(*)
          PetscScalar d(*)
          Vec e
          Vec f
          PetscErrorCode z
        end subroutine
      end interface PEPGetEigenpair

      interface PEPGetTolerances
        subroutine PEPGetTolerances00(a,b,c,z)
          use slepcpepdef
          PEP a
          PetscReal b
          PetscInt c
          PetscErrorCode z
        end subroutine
        subroutine PEPGetTolerances10(a,b,c,z)
          use slepcpepdef
          PEP a
          PetscReal b(*)
          PetscInt c
          PetscErrorCode z
        end subroutine
        subroutine PEPGetTolerances01(a,b,c,z)
          use slepcpepdef
          PEP a
          PetscReal b
          PetscInt c(*)
          PetscErrorCode z
        end subroutine
      end interface PEPGetTolerances

      interface PEPGetScale
        subroutine PEPGetScale000(a,b,c,d,e,f,g,z)
          use slepcpepdef
          PEP a
          PEPScale b
          PetscReal c
          Vec d,e
          PetscInt f
          PetscReal g
          PetscErrorCode z
        end subroutine
        subroutine PEPGetScale100(a,b,c,d,e,f,g,z)
          use slepcpepdef
          PEP a
          PEPScale b
          PetscReal c(*)
          Vec d,e
          PetscInt f
          PetscReal g
          PetscErrorCode z
        end subroutine
        subroutine PEPGetScale010(a,b,c,d,e,f,g,z)
          use slepcpepdef
          PEP a
          PEPScale b
          PetscReal c
          Vec d,e
          PetscInt f(*)
          PetscReal g
          PetscErrorCode z
        end subroutine
        subroutine PEPGetScale001(a,b,c,d,e,f,g,z)
          use slepcpepdef
          PEP a
          PEPScale b
          PetscReal c
          Vec d,e
          PetscInt f
          PetscReal g(*)
          PetscErrorCode z
        end subroutine
        subroutine PEPGetScale110(a,b,c,d,e,f,g,z)
          use slepcpepdef
          PEP a
          PEPScale b
          PetscReal c(*)
          Vec d,e
          PetscInt f(*)
          PetscReal g
          PetscErrorCode z
        end subroutine
        subroutine PEPGetScale011(a,b,c,d,e,f,g,z)
          use slepcpepdef
          PEP a
          PEPScale b
          PetscReal c
          Vec d,e
          PetscInt f(*)
          PetscReal g(*)
          PetscErrorCode z
        end subroutine
        subroutine PEPGetScale101(a,b,c,d,e,f,g,z)
          use slepcpepdef
          PEP a
          PEPScale b
          PetscReal c(*)
          Vec d,e
          PetscInt f
          PetscReal g(*)
          PetscErrorCode z
        end subroutine
        subroutine PEPGetScale111(a,b,c,d,e,f,g,z)
          use slepcpepdef
          PEP a
          PEPScale b
          PetscReal c(*)
          Vec d,e
          PetscInt f(*)
          PetscReal g(*)
          PetscErrorCode z
        end subroutine
      end interface PEPGetScale

      interface PEPGetRefine
        subroutine PEPGetRefine000(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PEPRefine b
          PetscInt c
          PetscReal d
          PetscInt e
          PEPRefineScheme f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetRefine100(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PEPRefine b
          PetscInt c(*)
          PetscReal d
          PetscInt e
          PEPRefineScheme f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetRefine010(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PEPRefine b
          PetscInt c
          PetscReal d(*)
          PetscInt e
          PEPRefineScheme f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetRefine001(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PEPRefine b
          PetscInt c
          PetscReal d
          PetscInt e(*)
          PEPRefineScheme f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetRefine110(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PEPRefine b
          PetscInt c(*)
          PetscReal d(*)
          PetscInt e
          PEPRefineScheme f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetRefine011(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PEPRefine b
          PetscInt c
          PetscReal d(*)
          PetscInt e(*)
          PEPRefineScheme f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetRefine101(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PEPRefine b
          PetscInt c(*)
          PetscReal d
          PetscInt e(*)
          PEPRefineScheme f
          PetscErrorCode z
        end subroutine
        subroutine PEPGetRefine111(a,b,c,d,e,f,z)
          use slepcpepdef
          PEP a
          PEPRefine b
          PetscInt c(*)
          PetscReal d(*)
          PetscInt e(*)
          PEPRefineScheme f
          PetscErrorCode z
        end subroutine
      end interface PEPGetRefine

      interface PEPSetInitialSpace
        subroutine PEPSetInitialSpace0(a,b,c,z)
          use slepcpepdef
          PEP a
          PetscInt b
          Vec c
          PetscErrorCode z
        end subroutine
        subroutine PEPSetInitialSpace1(a,b,c,z)
          use slepcpepdef
          PEP a
          PetscInt b
          Vec c(*)
          PetscErrorCode z
        end subroutine
      end interface PEPSetInitialSpace

