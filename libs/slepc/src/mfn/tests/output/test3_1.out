
Square root of Laplacian y=sqrt(A)*e_1, N=16 (4x4 grid)

 Type set to krylov
Mat Object: 1 MPI processes
  type: seqaij
row 0: (0, 4.)  (1, -1.)  (4, -1.) 
row 1: (0, -1.)  (1, 4.)  (2, -1.)  (5, -1.) 
row 2: (1, -1.)  (2, 4.)  (3, -1.)  (6, -1.) 
row 3: (2, -1.)  (3, 4.)  (7, -1.) 
row 4: (0, -1.)  (4, 4.)  (5, -1.)  (8, -1.) 
row 5: (1, -1.)  (4, -1.)  (5, 4.)  (6, -1.)  (9, -1.) 
row 6: (2, -1.)  (5, -1.)  (6, 4.)  (7, -1.)  (10, -1.) 
row 7: (3, -1.)  (6, -1.)  (7, 4.)  (11, -1.) 
row 8: (4, -1.)  (8, 4.)  (9, -1.)  (12, -1.) 
row 9: (5, -1.)  (8, -1.)  (9, 4.)  (10, -1.)  (13, -1.) 
row 10: (6, -1.)  (9, -1.)  (10, 4.)  (11, -1.)  (14, -1.) 
row 11: (7, -1.)  (10, -1.)  (11, 4.)  (15, -1.) 
row 12: (8, -1.)  (12, 4.)  (13, -1.) 
row 13: (9, -1.)  (12, -1.)  (13, 4.)  (14, -1.) 
row 14: (10, -1.)  (13, -1.)  (14, 4.)  (15, -1.) 
row 15: (11, -1.)  (14, -1.)  (15, 4.) 
 Tolerance: 0.0001, max iterations: 500
 Subspace dimension: 6
 Erroring out if convergence fails
MFN Object: 1 MPI processes
  type: krylov
  number of column vectors (ncv): 6
  maximum number of iterations: 500
  tolerance: 0.0001
FN Object: 1 MPI processes
  type: sqrt
    Square root: sqrt(x)
    computing matrix functions with: Schur method for the square root
BV Object: 1 MPI processes
  type: svec
  7 columns of global length 16
  vector orthogonalization method: classical Gram-Schmidt
  orthogonalization refinement: if needed (eta: 0.7071)
  block orthogonalization method: GS
  doing matmult as a single matrix-matrix product
Matrix function solve converged due to CONVERGED_TOL; iterations 3
 Finished - converged reason = 1
 sqrt(A)*v has norm 2.
