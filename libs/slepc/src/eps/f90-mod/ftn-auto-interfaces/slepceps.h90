      subroutine EPSLanczosSetReorthog(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSLanczosReorthogType b ! EPSLanczosReorthogType
       integer z
       end subroutine
      subroutine EPSLanczosGetReorthog(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSLanczosReorthogType b ! EPSLanczosReorthogType
       integer z
       end subroutine
      subroutine EPSArnoldiSetDelayed(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSArnoldiGetDelayed(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSBLOPEXSetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSBLOPEXGetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSLOBPCGSetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSLOBPCGGetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSLOBPCGSetRestart(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine EPSLOBPCGGetRestart(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine EPSLOBPCGSetLocking(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSLOBPCGGetLocking(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSLyapIISetRanks(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine EPSLyapIIGetRanks(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine EPSLyapIISetLME(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       LME b ! LME
       integer z
       end subroutine
      subroutine EPSLyapIIGetLME(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       LME b ! LME
       integer z
       end subroutine
      subroutine EPSBlzpackSetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSBlzpackGetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSBlzpackSetNSteps(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSBlzpackGetNSteps(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSPRIMMESetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSPRIMMEGetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSPRIMMESetMethod(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSPRIMMEMethod b ! EPSPRIMMEMethod
       integer z
       end subroutine
      subroutine EPSPRIMMEGetMethod(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSPRIMMEMethod b ! EPSPRIMMEMethod
       integer z
       end subroutine
      subroutine EPSKrylovSchurSetRestart(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine EPSKrylovSchurGetRestart(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine EPSKrylovSchurSetLocking(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSKrylovSchurGetLocking(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSKrylovSchurSetPartitions(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSKrylovSchurGetPartitions(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSKrylovSchurSetDetectZeros(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSKrylovSchurGetDetectZeros(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSKrylovSchurSetDimensions(a,b,c,d,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine EPSKrylovSchurGetDimensions(a,b,c,d,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine EPSKrylovSchurGetSubcommPairs(a,b,c,d,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscScalar c ! PetscScalar
       Vec d ! Vec
       integer z
       end subroutine
      subroutine EPSKrylovSchurUpdateSubcommMats(a,b,c,d,e,f,g,h,i,z)
      use slepcepsdef
       EPS a ! EPS
       PetscScalar b ! PetscScalar
       PetscScalar c ! PetscScalar
       Mat d ! Mat
       PetscScalar e ! PetscScalar
       PetscScalar f ! PetscScalar
       Mat g ! Mat
       MatStructure h ! MatStructure
       PetscBool i ! PetscBool
       integer z
       end subroutine
      subroutine EPSCISSSetSizes(a,b,c,d,e,f,g,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscBool g ! PetscBool
       integer z
       end subroutine
      subroutine EPSCISSGetSizes(a,b,c,d,e,f,g,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscBool g ! PetscBool
       integer z
       end subroutine
      subroutine EPSCISSSetThreshold(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine EPSCISSGetThreshold(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine EPSCISSSetRefinement(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine EPSCISSGetRefinement(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine EPSCISSSetUseST(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSCISSGetUseST(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSCISSSetQuadRule(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSCISSQuadRule b ! EPSCISSQuadRule
       integer z
       end subroutine
      subroutine EPSCISSGetQuadRule(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSCISSQuadRule b ! EPSCISSQuadRule
       integer z
       end subroutine
      subroutine EPSCISSSetExtraction(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSCISSExtraction b ! EPSCISSExtraction
       integer z
       end subroutine
      subroutine EPSCISSGetExtraction(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSCISSExtraction b ! EPSCISSExtraction
       integer z
       end subroutine
      subroutine EPSGDSetKrylovStart(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSGDGetKrylovStart(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSGDSetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSGDGetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSGDSetRestart(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine EPSGDGetRestart(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine EPSGDSetInitialSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSGDGetInitialSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSGDSetBOrth(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSGDGetBOrth(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSGDSetDoubleExpansion(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSGDGetDoubleExpansion(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSSetWorkVecs(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSMonitorCancel(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSSolve(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSGetIterationNumber(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSGetConverged(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSGetConvergedReason(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSConvergedReason b ! EPSConvergedReason
       integer z
       end subroutine
      subroutine EPSGetInvariantSubspace(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       Vec b (*) ! Vec
       integer z
       end subroutine
      subroutine EPSGetEigenvector(a,b,c,d,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine EPSGetLeftEigenvector(a,b,c,d,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine EPSGetErrorEstimate(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine EPSComputeError(a,b,c,d,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       EPSErrorType c ! EPSErrorType
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine EPSSetUp(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSSetOperators(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       Mat b ! Mat
       Mat c ! Mat
       integer z
       end subroutine
      subroutine EPSGetOperators(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       Mat b ! Mat
       Mat c ! Mat
       integer z
       end subroutine
      subroutine EPSAllocateSolution(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSSetFromOptions(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSSetTolerances(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine EPSSetDimensions(a,b,c,d,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine EPSSetWhichEigenpairs(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSWhich b ! EPSWhich
       integer z
       end subroutine
      subroutine EPSGetWhichEigenpairs(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSWhich b ! EPSWhich
       integer z
       end subroutine
      subroutine EPSSetConvergenceTest(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSConv b ! EPSConv
       integer z
       end subroutine
      subroutine EPSGetConvergenceTest(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSConv b ! EPSConv
       integer z
       end subroutine
      subroutine EPSSetStoppingTest(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSStop b ! EPSStop
       integer z
       end subroutine
      subroutine EPSGetStoppingTest(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSStop b ! EPSStop
       integer z
       end subroutine
      subroutine EPSSetProblemType(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSProblemType b ! EPSProblemType
       integer z
       end subroutine
      subroutine EPSGetProblemType(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSProblemType b ! EPSProblemType
       integer z
       end subroutine
      subroutine EPSSetExtraction(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSExtraction b ! EPSExtraction
       integer z
       end subroutine
      subroutine EPSGetExtraction(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSExtraction b ! EPSExtraction
       integer z
       end subroutine
      subroutine EPSSetBalance(a,b,c,d,z)
      use slepcepsdef
       EPS a ! EPS
       EPSBalance b ! EPSBalance
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       integer z
       end subroutine
      subroutine EPSSetTwoSided(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSGetTwoSided(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSSetTrueResidual(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSGetTrueResidual(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSSetTrackAll(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSGetTrackAll(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSSetPurify(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSGetPurify(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSReasonViewFromOptions(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSErrorViewFromOptions(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSValuesViewFromOptions(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSVectorsViewFromOptions(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSCreate(a,b,z)
      use slepcepsdef
       integer a ! MPI_Comm
       EPS b ! EPS
       integer z
       end subroutine
      subroutine EPSReset(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSDestroy(a,z)
      use slepcepsdef
       EPS a ! EPS
       integer z
       end subroutine
      subroutine EPSSetTarget(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine EPSGetTarget(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscScalar b ! PetscScalar
       integer z
       end subroutine
      subroutine EPSSetInterval(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine EPSGetInterval(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine EPSSetST(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       ST b ! ST
       integer z
       end subroutine
      subroutine EPSGetST(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       ST b ! ST
       integer z
       end subroutine
      subroutine EPSSetBV(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       BV b ! BV
       integer z
       end subroutine
      subroutine EPSGetBV(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       BV b ! BV
       integer z
       end subroutine
      subroutine EPSSetRG(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       RG b ! RG
       integer z
       end subroutine
      subroutine EPSGetRG(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       RG b ! RG
       integer z
       end subroutine
      subroutine EPSSetDS(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       DS b ! DS
       integer z
       end subroutine
      subroutine EPSGetDS(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       DS b ! DS
       integer z
       end subroutine
      subroutine EPSIsGeneralized(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSIsHermitian(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSIsPositive(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSPowerSetShiftType(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSPowerShiftType b ! EPSPowerShiftType
       integer z
       end subroutine
      subroutine EPSPowerGetShiftType(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       EPSPowerShiftType b ! EPSPowerShiftType
       integer z
       end subroutine
      subroutine EPSPowerSetNonlinear(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSPowerGetNonlinear(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSPowerSetUpdate(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSPowerGetUpdate(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSPowerSetSNES(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       SNES b ! SNES
       integer z
       end subroutine
      subroutine EPSPowerGetSNES(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       SNES b ! SNES
       integer z
       end subroutine
      subroutine EPSJDSetKrylovStart(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSJDGetKrylovStart(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSJDSetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSJDGetBlockSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSJDSetRestart(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine EPSJDGetRestart(a,b,c,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine EPSJDSetInitialSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSJDGetInitialSize(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSJDSetFix(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine EPSJDGetFix(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscReal b ! PetscReal
       integer z
       end subroutine
      subroutine EPSJDSetConstCorrectionTol(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSJDGetConstCorrectionTol(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSJDSetBOrth(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSJDGetBOrth(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine EPSRQCGSetReset(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine EPSRQCGGetReset(a,b,z)
      use slepcepsdef
       EPS a ! EPS
       PetscInt b ! PetscInt
       integer z
       end subroutine
